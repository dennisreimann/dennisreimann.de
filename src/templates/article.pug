extends /includes/layout
include /includes/articles
include /includes/icon

block title
  title= h.article.title(mvb.article)

block meta
  meta(name="description" content=h.article.description(mvb.article))
  if mvb.article.tags
    meta(name="keywords" content=h.article.keywords(mvb.article))

block og
  meta(property="og:type" content="article")
  meta(property="og:title" content=h.article.title(mvb.article))
  meta(property="og:description" content=h.article.description(mvb.article))
  meta(property="article:section" content="Technology")
  meta(property="article:published_time" content=h.article.feedDate(mvb.article))
  if mvb.article.ogImage
    meta(name="twitter:image" content=h.assetUrl(`images/og/${mvb.article.ogImage}.png`, "http"))
    meta(property="og:image" content=h.assetUrl(`images/og/${mvb.article.ogImage}.png`, "http"))
    meta(property="og:image:secure_url" content=h.assetUrl(`images/og/${mvb.article.ogImage}.png`, "https"))
    meta(property="og:image:width" content=1600)
    meta(property="og:image:height" content=838)
  if mvb.article.tags
    for tag in mvb.article.tags
      meta(property="article:tag" content=tag)

block foot
  if h.article.hasCode(mvb.article)
    link(href=h.assetUrl("styles/vendor/highlightjs.css") media="all" rel="stylesheet")
  script(src=h.assetUrl("scripts/webmentions.js") defer)

block main
  - a = mvb.article
  - update = h.article.getDate(a)
  article.article.h-entry
    header.article__header.top
      hgroup.wrap
        h1.article__title.p-name= a.title
        if a.subtitle
          h2.article__subtitle.p-summary= a.subtitle
    .article__content.wrap.e-content!= a.content
    footer.article__footer
      .article__meta.wrap
        if a.elmVersion
          p
            if h.isEnglish(locals)
              | Code samples for Elm #{a.elmVersion}.
            else
              | Code-Beispiele für Elm #{a.elmVersion}.
        p
          if h.isEnglish(locals)
            span Published on
            time.article__date.dt-published(datetime=a.date)= h.formatDateEnglish(a.date)
            = " by "
            span.h-card.p-author
              a.p-name.u-url(href="https://dennisreimann.de/") Dennis Reimann
          else
            span Veröffentlicht am
            time.article__date.dt-published(datetime=a.date)= h.formatDateGerman(a.date)
            = " von "
            span.h-card.p-author
              a.p-name.u-url(href="https://dennisreimann.de/") Dennis Reimann
          | .
          if update && update != a.date
            br
            if h.isEnglish(locals)
              span Updated on
              time.article__date.dt-updated(datetime=update)= h.formatDateEnglish(update)
            else
              span Aktualisiert am
              time.article__date.dt-updated(datetime=update)= h.formatDateEnglish(update)
            | .
          if h.isEnglish(locals)
            p.social
              = "Liked the article? Follow me on "
              a(href="https://twitter.com/dennisreimann" rel="me") Twitter
              = " or "
              a(href="https://mastodon.social/@dennisreimann" rel="me") Mastodon
              = "."
              br
              = "You got remarks or corrections? "
              a(href=`https://github.com/dennisreimann/dennisreimann.de/blob/master/src/articles/${a.fileName}`) Let me know!

      .article__nav.wrap
        - prevArticle = mvb.article.previousArticle
        - nextArticle = mvb.article.nextArticle
        +articles([nextArticle, prevArticle].filter(e =>  e), "blog").article__nav__items
        h5.article__nav__title
          a.more__link(href="/articles.html")= h.t(locals, "Weitere Artikel", "More articles")

      .article__mentions.wrap#articleMentions
